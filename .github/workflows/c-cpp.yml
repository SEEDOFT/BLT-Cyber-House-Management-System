# GitHub Actions workflow for C/C++ CI targeting Windows using MSBuild

name: C/C++ CI (Windows - MSBuild)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    # Specify that the job should run on the latest version of Windows
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Add MSBuild to path
      # This action sets up MSBuild tools, ensuring they are available in the PATH.
      # It's good practice to include this for consistency, though MSBuild is often pre-installed.
      uses: microsoft/setup-msbuild@v2 # Updated to v2, check for latest if needed

    - name: Restore NuGet packages (if any)
      # If your solution uses NuGet packages, this step will restore them.
      # If you don't use NuGet, you can comment out or remove this step.
      run: msbuild "BLT Cyber House Management System.sln" /t:Restore /p:Configuration=Release
      # The solution name should exactly match your .sln file.

    - name: Build Solution
      # This command builds your solution.
      # Adjust Configuration (Release/Debug) as needed.
      run: msbuild "BLT Cyber House Management System.sln" /p:Configuration=Release
      # The solution name should exactly match your .sln file.

    # --- Optional Steps (Uncomment and adapt if needed) ---

    # - name: Run Tests (Example if you have a test project)
    #   # If your solution includes unit tests (e.g., a separate test project),
    #   # you would add a step here to run them.
    #   # This often involves using vstest.console.exe or building a specific test project.
    #   # Example:
    #   # run: vstest.console.exe "path\to\your\testproject.dll" /Platform:x64 /Framework:FrameworkCore10
    #   # Or if tests are run by building a specific project:
    #   # run: msbuild "PathToYourTestProject.vcxproj" /p:Configuration=Debug
    #   continue-on-error: false # Set to true if you want the workflow to continue even if tests fail

    # - name: Upload Build Artifacts (Example)
    #   # If you want to save the compiled output (e.g., .exe, .dlls)
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: blt-cyber-house-management-system-build
    #     path: | # Specify the path to your build output directory/files
    #       BLT Cyber House Management System/Release/**/*.exe
    #       BLT Cyber House Management System/Release/**/*.dll
    #       # Adjust the path based on your project's output structure and configuration (Debug/Release)
